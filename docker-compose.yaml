version: "3.9"

services:
  postgres:
    image: postgres:16
    container_name: demo_postgres
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo
      POSTGRES_PASSWORD: demopass
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U demo -d demo"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: demo_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: demo_kafka
    ports:
      - "9092:9092"   # внутренний контейнерный
      - "9094:9094"   # внешний для хоста
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: demo_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092

  migrator:
    image: migrate/migrate:latest
    container_name: demo_migrator
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "migrate -path=/migrations -database postgres://demo:demopass@postgres:5432/demo?sslmode=disable up || true"

networks:
  kafka-net:
    driver: bridge


volumes:
  pgdata:
